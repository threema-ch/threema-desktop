{
  "name": "threema-desktop",
  "productName": "Threema",
  "description": "Use Threema on your Desktop",
  "author": "Threema GmbH",
  "version": "2.0-beta29",
  "versionCode": 31,
  "license": "UNLICENSED",
  "homepage": "https://threema.ch/",
  "keywords": [
    "threema",
    "messenger",
    "communication"
  ],
  "private": true,
  "type": "module",
  "main": "build/electron/electron-main/electron-main.cjs",
  "sideEffects": false,
  "scripts": {
    "clean": "rm -rf build node_modules packaging/build && for d in \"libs/\"*; do rm -rf $d/node_modules; done",
    "build": "npm run rebuild && node tools/build-electron.cjs",
    "build:cli": "VITE_MAKE=cli,cli,consumer,sandbox vite build -m production -c config/vite.config.ts",
    "dist:consumer-sandbox": "npm run build consumer sandbox && node tools/dist-electron.cjs consumer sandbox",
    "dist:consumer-live": "npm run build consumer live && node tools/dist-electron.cjs consumer live",
    "dist:work-sandbox": "npm run build work sandbox && node tools/dist-electron.cjs work sandbox",
    "dist:work-live": "npm run build work live && node tools/dist-electron.cjs work live",
    "dist:work-onprem": "npm run build work onprem && node tools/dist-electron.cjs work onprem",
    "dev:cli": "npm run build:cli && node ./build/cli/cli/bin.cjs",
    "dev:consumer-sandbox": "npm run rebuild && tools/dev-electron.sh consumer sandbox",
    "dev:consumer-live": "npm run rebuild && tools/dev-electron.sh consumer live",
    "dev:work-sandbox": "npm run rebuild && tools/dev-electron.sh work sandbox",
    "dev:work-live": "npm run rebuild && tools/dev-electron.sh work live",
    "dev:work-onprem": "npm run rebuild && tools/dev-electron.sh work onprem",
    "rebuild": "electron-rebuild",
    "test:karma": "node tools/run-tests.cjs karma",
    "test:mocha": "node tools/run-tests.cjs mocha",
    "lint": "FAILED=\"\"; for t in tsc:parallel svelte eslint prettier; do npm run lint:${t} || FAILED=\"$FAILED $t\"; done; if [ -n \"$FAILED\" ]; then echo \"Failed: $FAILED\"; false; else echo \"All linters passed.\"; fi",
    "lint:fix": "npm run lint:eslint:fix && npm run lint:prettier:fix",
    "lint:tsc": "find src packaging -name tsconfig.json -exec echo {} \\; -exec npx tsc --noEmit -p {} \\;",
    "lint:tsc:parallel": "find src packaging -name tsconfig.json | xargs -I{} -P $(getconf _NPROCESSORS_ONLN) npx tsc --noEmit -p {}",
    "lint:tsc:parallel:uniq": "npm run lint:tsc:parallel | grep -- '^src/' | sort -u",
    "lint:eslint": "NODE_OPTIONS=\"--max-old-space-size=4096\" eslint . --ext .js,.cjs,.mjs,.svelte,.ts",
    "lint:eslint:fix": "NODE_OPTIONS=\"--max-old-space-size=4096\" eslint . --ext .js,.cjs,.mjs,.svelte,.ts --fix",
    "lint:prettier": "prettier -c \"**/*.{css,html,js,json,md,scss,svelte,ts,xml,yml}\"",
    "lint:prettier:fix": "prettier --write \"**/*.{css,html,js,json,md,scss,svelte,ts,xml,yml}\"",
    "lint:svelte": "svelte-check --workspace src/app/ --no-tsconfig --compiler-warnings \"a11y-click-events-have-key-events:ignore\"",
    "package": "npm run package --prefix ./packaging --",
    "protobuf:generate": "tools/generate-protobuf.sh",
    "safe-enums:generate": "npm run safe-enums:generate:module && npm run safe-enums:generate:prettify",
    "safe-enums:generate:module": "tools/generate-safe-enums.cjs < src/enum/schema.ts > src/common/enum.ts",
    "safe-enums:generate:prettify": "prettier --write \"src/common/enum.ts\"",
    "structbuf:generate": "npm run structbuf:generate:module && npm run structbuf:generate:rename && npm run structbuf:generate:prettify",
    "structbuf:generate:module": "structbuf-typescript threema-protocols/src/*.struct.yml -o src/common/network/structbuf --new-type true --byte-length true --snapshot true --clone true --base-class Struct=~/common/network/structbuf/base --external-import types=~/common/types",
    "structbuf:generate:rename": "echo 'Renaming files. TODO(DESK-1312): Do this cleanly' && find src/common/network/structbuf -maxdepth 1 -type d -name '*.struct' -exec bash -c 'path=\"{}\" && rm -r ${path%.struct} && mv $path ${path%.struct}' \\;",
    "structbuf:generate:prettify": "prettier --write \"src/common/network/structbuf/**/*.ts\"",
    "i18n:parse": "i18next 'src/app/**/*.{ts,svelte}' -o 'src/translations/$LOCALE/$NAMESPACE.json' -c config/i18next-parser.config.js",
    "assets:generate:icons:macos": "tools/generate-icons-macos.sh",
    "assets:generate:icons:windows": "tools/generate-icons-windows.sh",
    "assets:generate:icons:flatpak": "tools/generate-icons-flatpak.sh",
    "assets:generate:icons:web": "tools/generate-icons-web.sh",
    "assets:generate:icons": "npm run assets:generate:icons:macos && npm run assets:generate:icons:windows && npm run assets:generate:icons:flatpak && npm run assets:generate:icons:web",
    "emoji:generate": "npm run package --prefix ./tools/emoji && npm run emoji:generate:prettify",
    "emoji:generate:prettify": "prettier --write src/app/ui/svelte-components/generic/EmojiPicker/{emoji,groups}.html"
  },
  "engines": {
    "node": "18.18.2",
    "npm": "9.8.1"
  },
  "dependencies": {
    "@badrap/valita": "0.3.0",
    "@mattiasbuelens/web-streams-adapter": "0.1.0",
    "@sentry/browser": "7.57.0",
    "@threema/compose-area": "~0.4.5",
    "@threema/threema-markup": "1.1.0",
    "argon2": "file:libs/node-argon2",
    "autolinker": "4.0.0",
    "better-sqlcipher": "file:libs/better-sqlcipher",
    "croppie": "^2.6.5",
    "fast-sha256": "1.3.0",
    "i18next": "~23.8.2",
    "i18next-icu": "~2.3.0",
    "intl-messageformat": "~10.5.0",
    "libthreema": "file:libs/libthreema",
    "long": "5.2.3",
    "protobufjs": "7.2.6",
    "qrcode": "^1.5.3",
    "scrypt-js": "3.0.1",
    "svelte": "4.2.12",
    "synchronous-promise": "~2.0.17",
    "ts-events": "3.4.1",
    "ts-sql-query": "1.58.0",
    "tweetnacl": "1.0.3",
    "web-streams-polyfill": "~3.3.2"
  },
  "electron": {
    "external": [
      "argon2",
      "better-sqlcipher",
      "electron"
    ],
    "dist": {
      "dependencyTree": {
        "argon2": [
          "@phc/format"
        ]
      },
      "include": {
        "/": "^(LICENSE|package.json|package-lock.json|README.md)$",
        "/build/electron/": "^(app($|\\/)|electron-main($|\\/)|electron-preload($|\\/))",
        "/node_modules/@phc/format/": "^(index.js|package.json)$",
        "/node_modules/argon2/": "^(argon2.js|package.json)$",
        "/node_modules/argon2/build/Release/": "^argon2.node$",
        "/node_modules/better-sqlcipher/": "^(lib($|\\/)|package.json$)",
        "/node_modules/better-sqlcipher/build/Release/": "^better_sqlcipher.node$"
      }
    }
  },
  "devDependencies": {
    "@electron/fuses": "1.7.0",
    "@electron/notarize": "2.2.1",
    "@electron/osx-sign": "1.0.5",
    "@electron/rebuild": "3.6.0",
    "@prettier/plugin-xml": "3.2.2",
    "@sveltejs/vite-plugin-svelte": "2.4.6",
    "@types/chai": "~4.3.0",
    "@types/croppie": "^2.6.4",
    "@types/debug": "~4.1.7",
    "@types/electron-installer-dmg": "~4.0.3",
    "@types/estree": "~1.0.0",
    "@types/fs-extra": "~11.0.4",
    "@types/mocha": "~10.0.0",
    "@types/node": "~18.18.14",
    "@types/qrcode": "^1.5.5",
    "@types/sinon": "~17.0.2",
    "@types/sinon-chai": "~3.2.9",
    "@typescript-eslint/eslint-plugin": "~6.20.0",
    "@typescript-eslint/parser": "~6.20.0",
    "@typescript-eslint/types": "~6.20.0",
    "@typescript-eslint/utils": "~6.20.0",
    "chai": "~4.4.1",
    "debug": "~4.3.3",
    "electron": "28.2.4",
    "electron-installer-dmg": "~4.0.0",
    "electron-packager": "~17.1.1",
    "emojibase-data": "15.0.0",
    "es-module-lexer": "~1.1.0",
    "eslint": "~8.56.0",
    "eslint-config-prettier": "~9.1.0",
    "eslint-import-resolver-typescript": "3.6.1",
    "eslint-plugin-import": "2.29.1",
    "eslint-plugin-jsdoc": "~48.0.4",
    "eslint-plugin-simple-import-sort": "~10.0.0",
    "eslint-plugin-svelte": "~2.35.1",
    "eslint-plugin-threema": "file:libs/eslint-plugin-threema",
    "fs-extra": "~11.2.0",
    "i18next-parser": "8.12.0",
    "karma": "~6.4.0",
    "karma-chai": "~0.1.0",
    "karma-chrome-launcher": "~3.2.0",
    "karma-firefox-launcher": "~2.1.2",
    "karma-junit-reporter": "~2.0.1",
    "karma-mocha": "~2.0.1",
    "karma-mocha-reporter": "~2.2.5",
    "magic-string": "0.27.0",
    "mocha": "~10.2.0",
    "mocha-junit-reporter": "~2.2.0",
    "prettier": "3.2.4",
    "prettier-plugin-svelte": "3.1.2",
    "protobufjs-cli": "1.1.2",
    "sass": "~1.58.0",
    "sinon": "~17.0.1",
    "sinon-chai": "~3.7.0",
    "structbuf-typescript": "file:libs/structbuf-typescript",
    "svelte-check": "3.6.2",
    "svelte-preprocess": "5.1.3",
    "svelte2tsx": "~0.6.21",
    "ts-proto": "~1.167.2",
    "typescript": "~5.3.3",
    "typescript-eslint-parser-for-extra-files": "~0.6.0",
    "vite": "4.5.2",
    "vite-tsconfig-paths": "4.2.1"
  },
  "overrides": {
    "glob-parent": "^5.1.2",
    "optionator": "0.9.3",
    "node-gyp": "~9.3.1"
  }
}
